class BitBuffer{constructor(e){this.bitCapacity=e;let t=this.bitCapacity+7>>3;this.buffer=new Uint8Array(t),this.bitOffset=0}append(e,t){for(let i=0;i<t;i++){let r=this.buffer[this.bitOffset>>3],n=7-(7&this.bitOffset),s=1<<n,o=1<<t-1-i;this.buffer[this.bitOffset>>3]=r&~s|(e&o?s:0),this.bitOffset++}}position(){return this.bitOffset}read(e){let t=this.buffer[e>>3]&1<<7-(7&e)?1:0;return t}}class SegmentNumeric{static MODE=1;static CHARSET="0123456789";static canEncode(e){return[...e].every(e=>SegmentNumeric.CHARSET.includes(e))}static payloadSize(e){let t=e.length;return 10*Math.floor(t/3)+t%3*4-Math.floor(t%3/2)}static countSize(e){return e<10?10:e<27?12:14}static totalSize(e,t){return Segment.MODE_BITS+SegmentNumeric.countSize(e)+SegmentNumeric.payloadSize(t)}static encode(e,t,i){let r=[...i].map(e=>e.charCodeAt(0)-48);e.append(SegmentNumeric.MODE,Segment.MODE_BITS),e.append(r.length,SegmentNumeric.countSize(t));for(let n=0;n<r.length;){r.length-n>3||r.length;let s=r[n],o=4;++n<r.length&&(s=10*s+r[n],o+=3,n++),n<r.length&&(s=10*s+r[n],o+=3,n++),e.append(s,o)}}}class SegmentAlphanumeric{static MODE=2;static CHARSET="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";static canEncode(e){return[...e].every(e=>SegmentAlphanumeric.CHARSET.includes(e))}static payloadSize(e){let t=e.length;return 11*Math.floor(t/2)+6*(t%2)}static countSize(e){return e<10?9:e<27?11:13}static totalSize(e,t){return Segment.MODE_BITS+SegmentAlphanumeric.countSize(e)+SegmentAlphanumeric.payloadSize(t)}static encode(e,t,i){let r=[...i].map(e=>SegmentAlphanumeric.CHARSET.indexOf(e));e.append(SegmentAlphanumeric.MODE,Segment.MODE_BITS),e.append(r.length,SegmentAlphanumeric.countSize(t));for(let n=0;n<r.length;){let s=r[n],o=6;++n<r.length&&(s=45*s+r[n],o+=5,n++),e.append(s,o)}}}class SegmentEightBit{static MODE=4;static canEncode(e){return[...e].every(e=>e.charCodeAt(0)>=0&&255>=e.charCodeAt(0))}static payloadSize(e){let t=e.length;return 8*t}static countSize(e){return e<10?8:16}static totalSize(e,t){return Segment.MODE_BITS+SegmentEightBit.countSize(e)+SegmentEightBit.payloadSize(t)}static encode(e,t,i){let r=[...i].map(e=>e.charCodeAt(0));e.append(SegmentEightBit.MODE,Segment.MODE_BITS),e.append(r.length,SegmentEightBit.countSize(t));for(let n=0;n<r.length;n++)e.append(r[n],8)}}class Segment{static MODES={numeric:SegmentNumeric,alphanumeric:SegmentAlphanumeric,eightBit:SegmentEightBit};static MODE_BITS=4;static MODE_INDICATOR_TERMINATOR=0;constructor(e){for(let t of(this.text=e,Object.values(Segment.MODES)))if(t.canEncode(this.text)){this.mode=t;return}throw"Cannot encode text"}}class ReedSolomon{static Multiply(e,t){let i=0;for(let r=7;r>=0;r--)i=(i<<1^(i>>7)*285)&255,i^=(t>>r&1)*e;return i}static Divisor(e){let t=new Uint8Array(e);t.fill(0),t[e-1]=1;let i=1;for(let r=0;r<e;r++){for(let n=0;n<e;n++)t[n]=ReedSolomon.Multiply(t[n],i),n+1<e&&(t[n]^=t[n+1]);i=255&ReedSolomon.Multiply(i,2)}return t}static Remainder(e,t,i,r,n,s,o){s.fill(0,o,o+n);for(let l=0;l<i;l++){let $=e[t+l]^s[o+0];s.copyWithin(o,o+1,o+1+n-1),s[o+n-1]=0;for(let a=0;a<n;a++)s[o+a]^=ReedSolomon.Multiply(r[a],$)}}}class Matrix{static MODULE_LIGHT=0;static MODULE_DARK=1;static FINDER_SIZE=7;static TIMING_OFFSET=6;static VERSION_SIZE=3;static ALIGNMENT_RADIUS=2;static QUIET_NONE=0;static QUIET_STANDARD=4;static calculateDimension(e){return 17+4*e}static calculateMask(e,t,i){switch(e){case 0:return(i+t&1)==0;case 1:return(1&i)==0;case 2:return t%3==0;case 3:return(i+t)%3==0;case 4:return((i>>1)+(t/3|0)&1)==0;case 5:return(i*t&1)+i*t%3==0;case 6:return((i*t&1)+i*t%3&1)==0;case 7:return(i*t%3+(i+t&1)&1)==0;default:return!1}}static alignmentCoordinates(e){let t=e<=1?0:Math.floor(e/7)+2,i=Array(t),r=32==e?26:2*Math.floor((4*e+2*t+1)/(2*t-2)),n=4*e+10;for(let s=t-1;s>0;s--)i[s]=n,n-=r;return t>0&&(i[0]=6),i}constructor(e){this.version=e,this.dimension=Matrix.calculateDimension(this.version);let t=this.dimension*this.dimension;this.buffer=Array(t),this.identity=Array(t),this.quiet=Matrix.QUIET_STANDARD,this.invert=!1,this.text=null}setModule(e,t,i,r){if(e<0||t<0||e>=this.dimension||t>=this.dimension)return;let n=t*this.dimension+e;this.buffer[n]=i,void 0!==r&&(this.identity[n]=r)}getModule(e,t){if(e<0||t<0||e>=this.dimension||t>=this.dimension)return null;let i=t*this.dimension+e;return this.buffer[i]}identifyModule(e,t){if(e<0||t<0||e>=this.dimension||t>=this.dimension)return;let i=t*this.dimension+e;return this.identity[i]}drawFinder(e,t){for(let i=-Math.floor(Matrix.FINDER_SIZE/2)-1;i<=Math.floor(Matrix.FINDER_SIZE/2)+1;i++)for(let r=-Math.floor(Matrix.FINDER_SIZE/2)-1;r<=Math.floor(Matrix.FINDER_SIZE/2)+1;r++){let n=(Math.abs(r)>Math.abs(i)?Math.abs(r):Math.abs(i))&1?Matrix.MODULE_DARK:Matrix.MODULE_LIGHT;0==r&&0==i&&(n=Matrix.MODULE_DARK);let s=0==r&&0==i?"FI":"Fi";this.setModule(e+r,t+i,n,s)}}drawTiming(){for(let e=Matrix.FINDER_SIZE+1;e<this.dimension-Matrix.FINDER_SIZE-1;e++){let t=1&~e?Matrix.MODULE_DARK:Matrix.MODULE_LIGHT;this.setModule(e,Matrix.TIMING_OFFSET,t,"Ti"),this.setModule(Matrix.TIMING_OFFSET,e,t,"Ti")}}drawAlignment(e,t){for(let i=-Matrix.ALIGNMENT_RADIUS;i<=Matrix.ALIGNMENT_RADIUS;i++)for(let r=-Matrix.ALIGNMENT_RADIUS;r<=Matrix.ALIGNMENT_RADIUS;r++){let n=1-((Math.abs(r)>Math.abs(i)?Math.abs(r):Math.abs(i))&1)?Matrix.MODULE_DARK:Matrix.MODULE_LIGHT,s=0==r&&0==i?"AL":"Al";this.setModule(e+r,t+i,n,s)}}populateFunctionPatterns(){this.drawFinder(Math.floor(Matrix.FINDER_SIZE/2),Math.floor(Matrix.FINDER_SIZE/2)),this.drawFinder(this.dimension-1-Math.floor(Matrix.FINDER_SIZE/2),Math.floor(Matrix.FINDER_SIZE/2)),this.drawFinder(Math.floor(Matrix.FINDER_SIZE/2),this.dimension-1-Math.floor(Matrix.FINDER_SIZE/2)),this.drawTiming();let e=Matrix.alignmentCoordinates(this.version);for(let t of e)for(let i of e)(!(t<=Matrix.FINDER_SIZE)||!(i<=Matrix.FINDER_SIZE))&&(!(t>=this.dimension-1-Matrix.FINDER_SIZE)||!(i<=Matrix.FINDER_SIZE))&&(t<=Matrix.FINDER_SIZE&&i>=this.dimension-1-Matrix.FINDER_SIZE||this.drawAlignment(t,i));this.drawFormatInfo(0),this.drawVersionInfo(0)}cursorReset(){this.cursorX=this.dimension-1,this.cursorY=this.dimension-1}cursorAdvance(){for(;this.cursorX>=0;)if(1&this.cursorX^(this.cursorX>Matrix.TIMING_OFFSET?1:0)?this.cursorX--:(this.cursorX++,(this.cursorX-(this.cursorX>Matrix.TIMING_OFFSET?1:0))/2&1?this.cursorY<=0?this.cursorX-=2:this.cursorY--:this.cursorY>=this.dimension-1?this.cursorX-=2:this.cursorY++),!this.identifyModule(this.cursorX,this.cursorY))return!0;return!1}cursorWrite(e,t,i){let r=t;for(let n=0;n<i;n++){let s=e.read(r);if(this.setModule(this.cursorX,this.cursorY,s),r++,!this.cursorAdvance())break}return r-t}drawFormatInfo(e){for(let t=0;t<15;t++){let i=e>>t&1;t<6?this.setModule(Matrix.FINDER_SIZE+1,t,i,"Fo"):6==t?this.setModule(Matrix.FINDER_SIZE+1,Matrix.FINDER_SIZE,i,"Fo"):7==t?this.setModule(Matrix.FINDER_SIZE+1,Matrix.FINDER_SIZE+1,i,"Fo"):8==t?this.setModule(Matrix.FINDER_SIZE,Matrix.FINDER_SIZE+1,i,"Fo"):this.setModule(14-t,Matrix.FINDER_SIZE+1,i,"Fo"),t<8?this.setModule(this.dimension-1-t,Matrix.FINDER_SIZE+1,i,"Fo"):this.setModule(Matrix.FINDER_SIZE+1,this.dimension-Matrix.FINDER_SIZE-8+t,i,"Fo")}this.setModule(Matrix.FINDER_SIZE+1,this.dimension-1-Matrix.FINDER_SIZE,Matrix.MODULE_DARK,"Fo")}drawVersionInfo(e){if(null!==e&&!(this.version<7))for(let t=0;t<18;t++){let i=e>>t&1,r=Math.floor(t/Matrix.VERSION_SIZE),n=t%Matrix.VERSION_SIZE;this.setModule(r,this.dimension-1-Matrix.FINDER_SIZE-Matrix.VERSION_SIZE+n,i,"Ve"),this.setModule(this.dimension-1-Matrix.FINDER_SIZE-Matrix.VERSION_SIZE+n,r,i,"Ve")}}applyMaskPattern(e){for(let t=0;t<this.dimension;t++)for(let i=0;i<this.dimension;i++){let r=this.identifyModule(i,t);if(!r){let n=Matrix.calculateMask(e,i,t);if(n){let s=this.getModule(i,t),o=1^s;this.setModule(i,t,o)}}}}evaluatePenalty(){let e=0;for(let t=0;t<=1;t++){let i=[,,,,,],r=0;for(let n=0;n<this.dimension;n++){let s=-1,o=0;for(let l=0;l<this.dimension;l++){let $=this.getModule(t?n:l,t?l:n);if($==s&&o++,$!=s||l>=this.dimension-1){if(s>=0&&(o>=5&&(e+=3+(o-5)),i[++r%5]=o,r>=5)){let a=i[(r+1)%5];i[r%5]==3*a&&a==i[(r+2)%5]&&a==i[(r+3)%5]&&a==i[(r+4)%5]&&(e+=40)}o=1,s=$}}}}for(let d=0;d<this.dimension-1;d++)for(let u=0;u<this.dimension-1;u++){let h=this.getModule(u,d);h+=this.getModule(u+1,d),h+=this.getModule(u,d+1),(0==(h+=this.getModule(u+1,d+1))||4==h)&&(e+=3)}{let c=0;for(let _=0;_<this.dimension;_++)for(let f=0;f<this.dimension;f++)this.getModule(f,_)==Matrix.MODULE_DARK&&c++;let m;e+=10*Math.floor(Math.abs((100*c+this.dimension*this.dimension/2)/(this.dimension*this.dimension)-50)/5)}return e}}class QrCode{static VERSION_MIN=1;static VERSION_MAX=40;static ErrorCorrectionLevel={L:1,M:0,Q:3,H:2};static ECC_CODEWORDS_MAX=30;static PAD_CODEWORDS=60433;static dimension(e){return 17+4*e}static totalDataModules(e){return(16*e+128)*e+64-(e<2?0:(25*(Math.floor(e/7)+2)-10)*(Math.floor(e/7)+2)-55)-(e<7?0:36)}static dataCapacity(e,t){let i=Math.floor(QrCode.totalDataModules(e)/8),r=QrCode.eccBlockCodewords(e,t)*QrCode.eccBlockCount(e,t);return 8*(i-r)}static eccBlockCount(e,t){return[[0,1,1,1,2,2,4,4,4,5,5,5,8,9,9,10,10,11,13,14,16,17,17,18,20,21,23,25,26,28,29,31,33,35,37,38,40,43,45,47,49],[0,1,1,1,1,1,2,2,2,2,4,4,4,4,4,6,6,6,6,7,8,8,9,9,10,12,12,12,13,14,15,16,17,18,19,19,20,21,22,24,25],[0,1,1,2,4,4,4,5,6,8,8,11,11,16,16,18,16,19,21,25,25,25,34,30,32,35,37,40,42,45,48,51,54,57,60,63,66,70,74,77,81],[0,1,1,2,2,4,4,6,6,8,8,8,10,12,16,12,17,16,18,21,20,23,23,25,27,29,34,34,35,38,40,43,45,48,51,53,56,59,62,65,68]][t][e]}static eccBlockCodewords(e,t){return[[0,10,16,26,18,24,16,18,22,22,26,30,22,22,24,24,28,28,26,26,26,26,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28],[0,7,10,15,20,26,18,20,24,30,18,20,24,26,30,22,24,28,30,28,28,28,28,30,30,26,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[0,17,28,22,16,22,28,26,26,24,28,24,28,22,24,24,30,28,28,26,28,30,24,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30],[0,13,22,18,26,18,24,18,22,20,24,28,26,24,20,30,24,28,28,26,30,28,30,30,30,30,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30]][t][e]}static calculateVersionInfo(e){if(e<7)return null;let t=e;for(let i=0;i<12;i++)t=t<<1^(t>>>11)*7973;let r=e<<12|t;return r}static calculateFormatInfo(e,t){let i=(3&e)<<3|7&t,r=i;for(let n=0;n<10;n++)r=r<<1^(r>>>9)*1335;let s=i<<10|1023&r;return 21522^s}static measureSegments(e,t){let i=0;for(let r of e)i+=r.mode.totalSize(t,r.text);return i}static doSegmentsFit(e,t,i){let r=QrCode.measureSegments(e,t),n=QrCode.dataCapacity(t,i);return r<=n}static findMinimumVersion(e,t,i=QrCode.VERSION_MIN,r=QrCode.VERSION_MAX){for(let n=i;n<=r;n++)if(QrCode.doSegmentsFit(e,n,t))return n;throw"Cannot fit data in any allowed versions"}static tryToImproveErrorCorrectionLevel(e,t,i){let r=Object.values(QrCode.ErrorCorrectionLevel);for(let n=1;n<r.length;n++)i==r[n-1]&&QrCode.doSegmentsFit(e,t,r[n])&&(i=r[n]);return i}static writeData(e,t,i){for(let r of i)r.mode.encode(e,t,r.text)}static writePadding(e,t,i){let r=QrCode.dataCapacity(t,i),n;for(n=Math.min(r-e.position(),Segment.MODE_BITS),e.append(Segment.MODE_INDICATOR_TERMINATOR,n),n=Math.min(r-e.position(),8-(7&e.position())&7),e.append(0,n);(n=Math.min(r-e.position(),16))>0;)e.append(QrCode.PAD_CODEWORDS>>16-n,n);console.assert(e.position()===r,"Unexpectedly failed to correctly fill the data buffer")}static calculateEccAndFillMatrix(e,t,i,r){let n=QrCode.eccBlockCount(t,i),s=QrCode.eccBlockCodewords(t,i),o=QrCode.totalDataModules(t),l=Math.floor((o-8*s*n)/8);console.assert(8*l===e.bitOffset,`Expected current bit position ${e.bitOffset} to match ECC offset *8 ${8*l}`);let $=ReedSolomon.Divisor(s),a=l,d=Math.floor(a/n),u=n-(a-d*n),h=d+(u>=n?0:1);for(let c=0;c<n;c++){let _;_=c<u?c*d:c*d+(c-u);let f=d+(c<u?0:1),m=l+c*s;ReedSolomon.Remainder(e.buffer,_,f,$,s,e.buffer,m)}r.cursorReset();let p=0;for(let M=0;M<h;M++)for(let E=0;E<n;E++){if(M>=d&&E<u)continue;let g=E*d+(E>u?E-u:0)+M,x=8*g;p+=r.cursorWrite(e,x,8)}for(let I=0;I<s;I++)for(let S=0;S<n;S++){let D=8*l+S*s*8+8*I;p+=r.cursorWrite(e,D,8)}let R=Matrix.MODULE_LIGHT;for(;p<o&&(r.setModule(r.cursorX,r.cursorY,R),p++,r.cursorAdvance()););}static findOptimalMaskPattern(e,t){let i=-1,r=null;for(let n=0;n<=7;n++){e.applyMaskPattern(n);let s=QrCode.calculateFormatInfo(t,n);e.drawFormatInfo(s);let o=e.evaluatePenalty();e.applyMaskPattern(n),(i<0||o<i)&&(i=o,r=n)}return r}constructor(){}static generate(e,t){let i=Object.assign({errorCorrectionLevel:QrCode.ErrorCorrectionLevel.M,minVersion:QrCode.VERSION_MIN,maxVersion:QrCode.VERSION_MAX,optimizeEcc:!0,maskPattern:null,quiet:Matrix.QUIET_STANDARD,invert:!1},t),r=Array.isArray(e)?e:[e],n=r.map(e=>new Segment(e)),s=i.errorCorrectionLevel,o=QrCode.findMinimumVersion(n,s,i.minVersion,i.maxVersion);i.optimizeEcc&&(s=QrCode.tryToImproveErrorCorrectionLevel(n,o,s));let l=QrCode.totalDataModules(o),$=new BitBuffer(l);QrCode.writeData($,o,n),QrCode.writePadding($,o,s);let a=new Matrix(o);a.text=e,a.quiet=i.quiet,a.invert=i.invert,a.populateFunctionPatterns(),QrCode.calculateEccAndFillMatrix($,o,s,a);let d=i.maskPattern;null===d&&(d=QrCode.findOptimalMaskPattern(a,s)),a.applyMaskPattern(d);let u=QrCode.calculateVersionInfo(o);a.drawVersionInfo(u);let h=QrCode.calculateFormatInfo(s,d);return a.drawFormatInfo(h),a}static render(e,t,i){let r={debug:renderDebug,large:renderTextLarge,medium:renderTextMedium,compact:renderTextCompact,svg:renderSvg,"svg-uri":renderSvgUri,bmp:renderBmp,"bmp-uri":renderBmpUri,sixel:renderSixel,tgp:renderTerminalGraphicsProtocol,iip:renderInlineImagesProtocol};if(!r[e])throw Error("ERROR: Invalid render mode: "+e);return r[e](t,i)}}function BitmapGenerate(e,t,i,r=!1){let n=r?32:24,s={BITMAPCOREHEADER:12,BITMAPINFOHEADER:40,BITMAPV2INFOHEADER:52,BITMAPV3INFOHEADER:56,BITMAPV4HEADER:108,BITMAPV5HEADER:124},o=r?"BITMAPV4HEADER":"BITMAPCOREHEADER";if(!s.hasOwnProperty(o))throw`Unknown BMP header version: ${o}`;let l=s[o],$=4*Math.floor((t*Math.floor((n+7)/8)+3)/4),a=$*Math.abs(i),d=14+l,u=d+a,h=new ArrayBuffer(u),c=new DataView(h);if(c.setUint8(0,66),c.setUint8(1,77),c.setUint32(2,u,!0),c.setUint16(6,0,!0),c.setUint16(8,0,!0),c.setUint32(10,d,!0),l==s.BITMAPCOREHEADER?(c.setUint32(14,l,!0),c.setUint16(18,t,!0),c.setInt16(20,i,!0),c.setUint16(22,1,!0),c.setUint16(24,n,!0)):l>=s.BITMAPINFOHEADER&&(c.setUint32(14,l,!0),c.setUint32(18,t,!0),c.setInt32(22,i,!0),c.setUint16(26,1,!0),c.setUint16(28,n,!0),c.setUint32(30,r?3:0,!0),c.setUint32(34,a,!0),c.setUint32(38,2835,!0),c.setUint32(42,2835,!0),c.setUint32(46,0,!0),c.setUint32(50,0,!0)),l>=s.BITMAPV2INFOHEADER&&(c.setUint32(54,r?16711680:0,!0),c.setUint32(58,r?65280:0,!0),c.setUint32(62,r?255:0,!0)),l>=s.BITMAPV3INFOHEADER&&c.setUint32(66,r?4278190080:0,!0),l>=s.BITMAPV4HEADER){let _="Win ";c.setUint8(70,_.charCodeAt(0)),c.setUint8(71,_.charCodeAt(1)),c.setUint8(72,_.charCodeAt(2)),c.setUint8(73,_.charCodeAt(3)),c.setUint32(110,0,!0),c.setUint32(114,0,!0),c.setUint32(118,0,!0)}l>=s.BITMAPV5HEADER&&(c.setUint32(122,4,!0),c.setUint32(126,0,!0),c.setUint32(130,0,!0),c.setUint32(134,0,!0));for(let f=0;f<i;f++){let m=d+(i-1-f)*$;for(let p=0;p<t;p++){let M=e[f*t+p];c.setUint8(m+0,M[2]),c.setUint8(m+1,M[1]),c.setUint8(m+2,M[0]),r?(c.setUint8(m+3,M[3]),m+=4):m+=3}}return h}function renderDebug(e,t){t=Object.assign({segments:["  ","██"],sep:"\n"},t);let i=[];for(let r=-e.quiet;r<e.dimension+e.quiet;r++){let n=[];for(let s=-e.quiet;s<e.dimension+e.quiet;s++){let o=e.identifyModule(s,r),l=e.getModule(s,r)?!e.invert:e.invert,$=l?1:0;null==o&&(o=t.segments[$]),n.push(o)}i.push(n.join(""))}return i.join(t.sep)}function renderTextLarge(e,t){t=Object.assign({segments:["  ","██"],sep:"\n"},t);let i=[];for(let r=-e.quiet;r<e.dimension+e.quiet;r++){let n=[];for(let s=-e.quiet;s<e.dimension+e.quiet;s++){let o=e.getModule(s,r)?!e.invert:e.invert,l=o?1:0,$=t.segments.length>=3&&o&&!e.identifyModule(s,r)?t.segments[2]:t.segments[l];n.push($)}i.push(n.join(""))}return i.join(t.sep)}function renderTextMedium(e,t){t=Object.assign({segments:[" ","▀","▄","█"],sep:"\n"},t);let i=[];for(let r=-e.quiet;r<e.dimension+e.quiet;r+=2){let n=[];for(let s=-e.quiet;s<e.dimension+e.quiet;s++){let o=e.getModule(s,r)?!e.invert:e.invert,l=(r+1<e.dimension?e.getModule(s,r+1):0)?!e.invert:e.invert,$=(o?1:0)|(l?2:0),a=t.segments[$];n.push(a)}i.push(n.join(""))}return i.join(t.sep)}function renderTextCompact(e,t){t=Object.assign({segments:[" ","▘","▝","▀","▖","▌","▞","▛","▗","▚","▐","▜","▄","▙","▟","█"],sep:"\n"},t);let i=[];for(let r=-e.quiet;r<e.dimension+e.quiet;r+=2){let n=[];for(let s=-e.quiet;s<e.dimension+e.quiet;s+=2){let o=0;o|=(e.getModule(s,r)?!e.invert:e.invert)?1:0,o|=((s+1<e.dimension?e.getModule(s+1,r):0)?!e.invert:e.invert)?2:0,o|=((r+1<e.dimension?e.getModule(s,r+1):0)?!e.invert:e.invert)?4:0,o|=((r+1<e.dimension&&s+1<e.dimension?e.getModule(s+1,r+1):0)?!e.invert:e.invert)?8:0;let l=t.segments[o];n.push(l)}i.push(n.join(""))}return i.join(t.sep)}function renderSixel(e,t){t=Object.assign({scale:4},t);let i=[];i.push("\x1bP7;1q"),i.push("#0;2;0;0;0"),i.push("#1;2;100;100;100");for(let r=-e.quiet*t.scale;r<(e.dimension+e.quiet)*t.scale;r+=6){for(let n=0;n<2;n++){i.push("#"+n);for(let s=-e.quiet*t.scale;s<(e.dimension+e.quiet)*t.scale;s+=t.scale){let o=0;for(let l=0;l<6;l++){let $=(e.getModule(Math.floor(s/t.scale),Math.floor((r+l)/t.scale))?!e.invert:e.invert)?0:1,a=$==n?1:0;o|=(a?1:0)<<l}let d=(t.scale>3?"!"+t.scale:"")+String.fromCharCode(o+63).repeat(t.scale<=3?t.scale:1);i.push(d)}n+1<2&&i.push("$")}r+6<(e.dimension+e.quiet)*t.scale&&i.push("-")}return i.push("\x1b\\"),i.join("")}function renderTerminalGraphicsProtocol(e,t){t=Object.assign({scale:4,alpha:!1},t);let i=t.alpha,r=t.scale,n=e.dimension+2*e.quiet,s=e.dimension+2*e.quiet,o=new Uint8Array(n*r*(s*r)*(i?4:3));for(let l=0;l<s*r;l++)for(let $=0;$<n*r;$++){let a=e.getModule(Math.floor($/r)-e.quiet,Math.floor(l/r)-e.quiet);e.invert&&(a=!a);let d=a?[0,0,0,0]:[255,255,255,255];if(null==d)continue;let u=(l*(n*r)+$)*(i?4:3);o[u+0]=d[0],o[u+1]=d[1],o[u+2]=d[2],i&&(o[u+3]=d[3])}let h=[],c="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(let _=0;_<o.byteLength;_+=3){let f=o[_],m,p=f<<16|(_+1<o.byteLength?o[_+1]:0)<<8|(_+2<o.byteLength?o[_+2]:0)<<0;h.push(c[p>>18&63]),h.push(c[p>>12&63]),h.push(c[p>>6&63]),h.push(c[p>>0&63])}o.byteLength%3==1?(h[h.byteLength-1]="=",h[h.byteLength-2]="="):o.byteLength%3==2&&(h[h.byteLength-1]="=");let M=h.join(""),E=[];for(let g=0;g<M.length;g+=4096){let x=M.slice(g,g+4096),I=0==g?`a=T,f=${i?32:24},s=${n*r},v=${s*r},t=d,q=2,`:"",S=g+4096<M.length?1:0;E.push(`\x1b_G${I}m=${S};${x}\x1b\\`)}return E.join("")}function renderInlineImagesProtocol(e,t){let i=renderBmp(e,t),r=btoa(new Uint8Array(i).reduce((e,t)=>e+String.fromCharCode(t),"")),n=!(null!=t&&t.hasOwnProperty("chunked"))||t.chunked,s=[];if(n?s.push("\x1b]1337;MultipartFile="):s.push("\x1b]1337;File="),s.push("name="+btoa("qrcode.bmp")+";"),s.push("size="+i.byteLength+";"),s.push("width="+i.width+"px;"),s.push("height="+i.height+"px;"),s.push("preserveAspectRatio=1;"),s.push("inline=1;"),n){s.push("\x07");for(let o=0;o<r.length;o+=65536){let l=r.slice(o,o+65536);s.push("\x1b]1337;FilePart=",l,"\x07")}s.push("\x1b]1337;FileEnd\x07")}else s.push(":",r,"\x07");return s.join("")}function escape(e){return e.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/\"/g,"&quot;").replace(/\'/g,"&apos;")}function renderSvg(e,t){t=Object.assign({color:"currentColor",moduleRound:null,finderRound:null,alignmentRound:null,white:!1,moduleSize:1},t);let i=`${-e.quiet-t.moduleSize/2}`,r=`${2*(e.quiet+t.moduleSize/2)+e.dimension-1}`,n=[];n.push('<?xml version="1.0"?>'),n.push(`<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="${t.color}" viewBox="${i} ${i} ${r} ${r}" shape-rendering="crispEdges">`),n.push(`<title>${escape(e.text)}</title>`),n.push("<defs>"),n.push(`<rect id="b" x="${-t.moduleSize/2}" y="${-t.moduleSize/2}" width="${t.moduleSize}" height="${t.moduleSize}" rx="${.5*(t.moduleRound||0)*t.moduleSize}" />`),t.white&&n.push('<path id="w" d="" visibility="hidden" />'),null!=t.finderRound?(n.push('<path id="f" d="" visibility="hidden" />'),t.white&&n.push('<path id="fw" d="" visibility="hidden" />'),n.push(`<g id="fc"><rect x="-3" y="-3" width="6" height="6" rx="${3*t.finderRound}" stroke="${t.color}" stroke-width="1" fill="none" /><rect x="-1.5" y="-1.5" width="3" height="3" rx="${1.5*t.finderRound}" /></g>`),n.push(`<g id="fc"><rect x="-3" y="-3" width="6" height="6" rx="${3*t.finderRound}" stroke="${t.color}" stroke-width="1" fill="none" /><rect x="-1.5" y="-1.5" width="3" height="3" rx="${1.5*t.finderRound}" /></g>`)):(n.push('<use id="f" xlink:href="#b" />'),t.white&&n.push('<use id="fw" xlink:href="#w" />'),n.push('<path id="fc" d="" visibility="hidden" />')),null!=t.alignmentRound?(n.push('<path id="a" d="" visibility="hidden" />'),t.white&&n.push('<path id="aw" d="" visibility="hidden" />'),n.push(`<g id="ac"><rect x="-2" y="-2" width="4" height="4" rx="${2*t.alignmentRound}" stroke="${t.color}" stroke-width="1" fill="none" /><rect x="-0.5" y="-0.5" width="1" height="1" rx="${.5*t.alignmentRound}" /></g>`)):(n.push('<use id="a" xlink:href="#b" />'),t.white&&n.push('<use id="aw" xlink:href="#w" />'),n.push('<path id="ac" d="" visibility="hidden" />')),n.push("</defs>");for(let s=0;s<e.dimension;s++)for(let o=0;o<e.dimension;o++){let l=e.identifyModule(o,s),$=e.getModule(o,s);e.invert&&($=!$);let a=$?"b":"w";"Fi"==l||"FI"==l?a=$?"f":"fw":("Al"==l||"AL"==l)&&(a=$?"a":"aw"),($||t.white)&&n.push(`<use x="${o}" y="${s}" xlink:href="#${a}" />`)}for(let d=0;d<e.dimension;d++)for(let u=0;u<e.dimension;u++){let h=e.identifyModule(u,d),c=null;"FI"==h?c="fc":"AL"==h&&(c="ac"),null!=c&&n.push(`<use x="${u}" y="${d}" xlink:href="#${c}" />`)}n.push("</svg>");let _=n.join("\n");return _}function renderSvgUri(e,t){return"data:image/svg+xml,"+encodeURIComponent(renderSvg(e,t))}function renderBmp(e,t){t=Object.assign({scale:8,alpha:!1,width:null,height:null},t);let i=e.dimension+2*e.quiet;null===t.width&&(t.width=Math.floor(i*t.scale)),null===t.height&&(t.height=t.width);let r=Array(t.width*t.height).fill(null);for(let n=0;n<t.height;n++){let s=Math.floor(n*i/t.height)-e.quiet;for(let o=0;o<t.width;o++){let l=Math.floor(o*i/t.width)-e.quiet,$=e.getModule(l,s),a;a=e.invert?$?[255,255,255,255]:[0,0,0,0]:$?[0,0,0,255]:[255,255,255,0],r[n*t.width+o]=a}}let d=BitmapGenerate(r,t.width,t.height,t.alpha);return d.width=t.width,d.height=t.height,d.alpha=t.alpha,d}function renderBmpUri(e,t){let i=renderBmp(e,t),r=btoa(new Uint8Array(i).reduce((e,t)=>e+String.fromCharCode(t),""));return"data:image/bmp;base64,"+r}export default QrCode;